@model List<dynamic>
@{
    ViewData["Title"] = "YouTube";
    var forms_data = new 
    { 
        date = new Dictionary<string, object>
        {
            {"date-h", new { value = "h",text = "Last hour"} },
            {"date-t", new { value = "t",text = "Today"} },
            {"date-w", new { value = "w",text = "This week"} },
            {"date-m", new { value = "m",text = "This month"} },
            {"date-y", new { value = "y",text = "This year"} },
            {"date-a", new { value = "D",text = "All"} }
        },
        duration = new Dictionary<string, object>
        {
            {"du-short", new {value = "s", text = "Under 4 minutes" } },
            {"du-medium", new {value = "m", text = "4 - 20 minutes" } },
            {"du-long", new {value = "l", text = "Over 20 minutes" } },
            {"du-any", new {value = "D", text = "All" } }
        },
        sort = new Dictionary<string, object>
        {
            {"o-re", new {value = "D", text = "Relevance"} },
            {"o-d", new {value = "d", text = "Upload date"} },
            {"o-t", new {value = "t", text = "Title"} },
            {"o-v", new {value = "v", text = "View count"} },
            {"o-ra", new {value = "r", text = "Rating"} }
        }
    };
}

<script>
    window.addEventListener("load", function()  {
        var path = window.location.href;
        var url = new URL(path);
        url.searchParams.delete("token")
        url.searchParams.delete("pg")
        let search_q = url.searchParams.get("query")
        let sp = url.searchParams.get("sp")
        history.pushState({query: search_q, sp: sp},"",url)
    })
</script>

<style>
    .bt-ch{
    cursor: pointer;
    z-index: 50;
    }
    .bt-ch:hover{
    opacity: 0.45;
    }
    .conts:hover{
    box-shadow: 0 4px 10px rgba(255, 255, 255, 0.2);
    }
</style>

<div class="mx-5 text-center mt-3">
    <h2>Search YouTube Videos</h2>

    <form class="d-flex flex-column align-items-center needs-validation" novalidate>
        <div class="input-group">
            <button type="submit" class="input-group-text border-0" id="search-addon">
                <i class="fas fa-search"></i>
            </button>
            <input name="query" type="search" class="form-control" placeholder="Search" aria-label="Search" aria-describedby="search-addon" required 
            value="@(Model != null && Model.Any() ? Model[0].search : "")" />
            <button type="button" class="input-group-text border-0 rounded-end gap-1" id="search-addon" data-bs-toggle="modal" data-bs-target="#filtermodal">
                Filters
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-sliders2" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M10.5 1a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V4H1.5a.5.5 0 0 1 0-1H10V1.5a.5.5 0 0 1 .5-.5M12 3.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5m-6.5 2A.5.5 0 0 1 6 6v1.5h8.5a.5.5 0 0 1 0 1H6V10a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5M1 8a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2A.5.5 0 0 1 1 8m9.5 2a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V13H1.5a.5.5 0 0 1 0-1H10v-1.5a.5.5 0 0 1 .5-.5m1.5 2.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1h-2a.5.5 0 0 1-.5-.5" />
                </svg>
            </button>
            <div class="modal" tabindex="-1" id="filtermodal">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Search filters</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body d-flex">
                            <div class="d-flex flex-column form-check" style="max-width:fit-content;">
                                <h6>UPLOAD DATE</h6>
                                <hr />
                                @foreach(var item in forms_data.date)
                                {
                                    var data = item.Value as dynamic;
                                    <input name="from" type="radio" class="btn-check" id="@item.Key" value="@data.value" 
                                    @(Model != null && Model.Any() ? 
                                    (data.value == Model[0].filter[0] ? "checked" : "") :
                                    (data.value == "D" ? "checked" : ""))>
                                    <label class="btn " for="@item.Key">@data.text</label>
                                }
                            </div>
                            <div class="d-flex flex-column form-check" style="max-width:fit-content;">
                                <h6>DURATION</h6>
                                <hr />
                                @foreach(var item in forms_data.duration)
                                {
                                    var data = item.Value as dynamic;
                                    <input name="du" type="radio" class="btn-check" id="@item.Key" value="@data.value" 
                                    @(Model != null && Model.Any() ? 
                                    (data.value == Model[0].filter[1] ? "checked" : "") :
                                    (data.value == "D" ? "checked" : ""))>
                                    <label class="btn " for="@item.Key">@data.text</label>
                                }
                            </div>
                            <div class="d-flex flex-column form-check" style="max-width:fit-content;">
                                <h6>SORT BY</h6>
                                <hr />
                                @foreach (var item in forms_data.sort)
                                {
                                    var data = item.Value as dynamic;
                                    <input name="order" type="radio" class="btn-check" id="@item.Key" value="@data.value" 
                                    @(Model != null && Model.Any() ? 
                                    (data.value == Model[0].filter[2] ? "checked" : "") :
                                    (data.value == "D" ? "checked" : ""))>
                                    <label class="btn " for="@item.Key">@data.text</label>
                                }
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Search</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@if (Model != null && Model.Any())
{
    @if (Model.Count == 1)
    {
        <h3 class="text-center mt-2">No result found</h3>
    }
    else
    {
        <div class="d-flex flex-column mb-5 mt-3 w-100">
            @foreach (var video in Model)
            {
                if (video.ResType == "youtube#video")
                {
                    <a class="conts p-3 w-100" href="https://www.youtube.com/watch?v=@video.VideoId" style="text-decoration: none;" target="_blank">
                        <div class="d-flex flex-row">
                            <img class="rounded-4" src="@video.ThumbnailUrl" alt="@video.Title" />
                            <div class="d-flex flex-column ms-3">
                                <h3>@video.Title</h3>
                                <p>@video.GetPublish()</p>
                                <p class="bt-ch" onclick="window.open('https://www.youtube.com/channel/@video.ChannelId','_blank');"
                                   title="@video.ChannelTitle">
                                    @video.ChannelTitle
                                </p>
                                <p>@video.Description</p>
                            </div>
                        </div>
                    </a>
                }
                else if (video.ResType == "youtube#channel")
                {
                    <a class="conts p-3 w-100" href="https://www.youtube.com/channel/@video.ChannelId" style="text-decoration: none;" target="_blank">
                        <div class="d-flex align-items-center">
                            <img class="rounded-circle" src="@video.ThumbnailUrl" alt="@video.Title" />
                            <h3 class="ms-3">@video.Title</h3>
                        </div>
                    </a>
                }
            }
        </div>
    }

    @if (Model.Count != 1)
    {
        <div>
            <div class="d-flex justify-content-center mb-5 gap-3 align-items-center">
                <button type="button" class="input-group-text border-0" onclick="prevPage()" @(Model[0].currentPage == 1 ? "disabled style=opacity:0;":"")>
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left-square" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M15 2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1zM0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm11.5 5.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5z" />
                    </svg>
                </button>
                <h4 @(Model.Count < 11 && Model[0].currentPage == 1 ? "style=opacity:0;" : "")>@Model[0].currentPage</h4>
                <button type="button" class="input-group-text border-0" onclick="nextPage()" @(Model.Count < 11 ? "disabled style=opacity:0;" : "")>
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right-square" viewBox="0 0 16 16">
                        <path fill-rule="evenodd" d="M15 2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1zM0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm4.5 5.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5z" />
                    </svg>
                </button>
            </div>
        </div>
        <script>
            function nextPage(){
                let uri = new URL(window.location.href);
                uri.searchParams.set("token","@Model[0].nextPage");
                uri.searchParams.set("pg","@(Model[0].currentPage + 1)");
                return window.location.href = uri.href
            }
            function prevPage(){
                let uri = new URL(window.location.href);
                uri.searchParams.set("token","@Model[0].previousPage");
                uri.searchParams.set("pg","@(Model[0].currentPage - 1)");
                return window.location.href = uri.href
            }
        </script>
    }
}


<script>
    function textToHex(text) {
        return Array.from(text)
            .map(char => char.charCodeAt(0).toString(16).padStart(2, "0"))
            .join("");
    }

    const form = document.querySelector('.needs-validation')

    form.addEventListener('submit', event => {
        event.preventDefault();
        event.stopPropagation();
        form.classList.add('was-validated');

        let query = form.query.value;
        if (form.query.value == "") return

        let f = form.from.value;
        let d = form.du.value;
        let o = form.order.value;

        let sp = textToHex(`${f},${d},${o}`)
        const params = new URLSearchParams({
            query,
            sp
        })
        window.location.href = "/youtube/Search?" + params.toString();
    },false)
</script>
